/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Credit as PrismaCredit } from "@prisma/client";

export class CreditServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.CreditCountArgs, "select">): Promise<number> {
    return this.prisma.credit.count(args);
  }

  async credits(args: Prisma.CreditFindManyArgs): Promise<PrismaCredit[]> {
    return this.prisma.credit.findMany(args);
  }
  async credit(
    args: Prisma.CreditFindUniqueArgs
  ): Promise<PrismaCredit | null> {
    return this.prisma.credit.findUnique(args);
  }
  async createCredit(args: Prisma.CreditCreateArgs): Promise<PrismaCredit> {
    return this.prisma.credit.create(args);
  }
  async updateCredit(args: Prisma.CreditUpdateArgs): Promise<PrismaCredit> {
    return this.prisma.credit.update(args);
  }
  async deleteCredit(args: Prisma.CreditDeleteArgs): Promise<PrismaCredit> {
    return this.prisma.credit.delete(args);
  }
}
